{"version":3,"sources":["skylarkjs.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","xhrGet","url","callback","xhr","XMLHttpRequest","onreadystatechange","this","readyState","response","responseText","open","send","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","cb","requireOne","hasOwnProperty","Error","module","args","forEach","apply","window","onedep","modules","config","baseUrl","skylarkjs","skylark","http","res","console","error","cfg","JSON","parse","runtime","initApp","spa","_cfg","contextPath","app","go","path","force","prepare","then","run","spaModule","_start","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","each","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","location","href","segs","params","queryParam","nv","grep","out","has","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","klassName-","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","eval","responseXML","Blob","xhrObj","reponse","statusText","evt","hdr","setRequestHeader","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","_curCtx","dispatch","route","exit","_prevCtx","m","r","enter","router","useHistoryApi","history","pushState","title","_baseUrl","dispatchEvent","useHashbang","newHash","noCache","finded","_cache","_routes","routeName","hub","homePath","_homePath","setting","settings","routes","Route","host","initPath","pathname","addEventListener","preventDefault","pathto","pattern","paramNames","paramName","substring","_setting","regex","RegExp","_entering","_entered","ok","_exiting","_exited","names","x","decodeURIComponent","exec","content","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","render","perform","RouteController","Page","routeViewer","_params","_rvc","querySelector","_router","refresh","curCtx","innerHTML","appendChild","Plugin","hookers","isHooked","plugin","PluginController","Application","plugins","_plugins","_config","pluginName","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","normalizeCssEvent","css3EventPrefix","normalizeCssProperty","cssProps","normalizeStyleProperty","cssStyles","browser","vendorPrefix","vendorPrefixRE","css3PropPrefix","css3StylePrefix","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","testStyle","style","matched","cssPropName","support","maybeAddPx","cssNumber","classRE","classReCache","node","svg","baseVal","defaultDisplay","nodeName","element","display","elementDisplay","body","getComputedStyle","getPropertyValue","parentNode","removeChild","show","elm","styler","css","isInvisible","hide","addClass","re","property","computedStyle","removeProperty","cssText","hasClass","removeClass","toggleClass","every","column-count","columns","font-weight","line-height","opacity","z-index","zoom","autocssfix","cssHooks","ensureNodes","nodes","copyByClone","cloneNode","chkName","placing","refNode","nextSibling","insertBefore","append","contents","contentDocument","childNodes","tag","setAttribute","createFragment","singleTagRE","$1","fragmentRE","containers","container","dom","isIE","getAttribs","setAttrib","getAttrib","contains","child","isChildOf","createTextNode","doc","empty","hasChildNodes","firstChild","directly","documentElement","isDoc","ownerDoc","ownerDocument","ownerWindow","defaultView","parentWindow","prepend","offsetParent","rootNodeRE","overlay","overlayDiv","position","top","left","width","height","zIndex","warn","oldNode","replaceChild","throb","timer","time","throbber","textNode","nodeValue","end","traverse","children","wrapper","wrapperNode","wrapperInner","unwrap","noder","navigator","userAgent","div","table","tableBody","tableRow","tr","tbody","thead","tfoot","td","th","*","construct","_createStyleSheet","link","rel","head","sheetElementsById","insertRuleFunc","getElementsByTagName","sheetsByUrl","defaultSheetId","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","createStyleSheet","loadStyleSheet","loadedCallback","errorCallback","sheet","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteSheetRule","sheetId","rule","_rule","removeStyleSheet","findRules","rules","filters","parseSelector","$","styleSheets","styleSheet","filterStyleSheet","merge","_rules","matchSelector","selectorText","normalizeRule","nativeCSSStyleRule","CSSStyleRule","insertSheetRule","velm","createInputPseudo","elem","createButtonPseudo","ancestor","root","rootIsSelector","ancestors","local","byId","getElementById","closest","descendants","querySelectorAll","matchError","descendant","find","findAll","lastChild","last","previousSibling","nativeMatchesSelector","check","adjacent","nextSiblings","previousSiblings","siblings","parser","rawMatch","separator","combinator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","separatorIndex","parsed","expressions","combinatorIndex","currentSeparator","reversed","reverseCombinator","currentParsed","reUnescape","classList","classes","regexp","escapeRegExp","pseudos","operator","reverseCache","expression","isReversed","Slick","currentCache","raw","exp","cexp","from","to","string","rinputs","rheader","button","checked","disabled","enabled","even","focus","activeElement","tabindex","gt","sel","header","hidden","input","lt","not","odd","selected","visible","offsetWidth","isArrayFilter","radio","checkbox","file","image","submit","reset","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","removeAttribute","aria","attrName","_attributeData","store","_store","confirm","_getData","camelName","capitalRE","_setData","dataAttrName","cleanData","removeData","pluck","propMap","removeAttr","removeProp","txt","textContent","multiple","selectedOptions","option","datax","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","scrollbarWidth","cachedScrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","s","px","borderLeftWidth","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientHeight","clientSize","dimension","isBorderBox","bex","pex","paddingExtents","contentRect","cs","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginRect","relativeRect","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","pageRect","round","scrollIntoView","align","getOffset","rootElm","y","offsetLeft","offsetTop","parentWidth","parentHeight","parentElm","pos","scrollLeft","scrollTop","hasScrollLeft","scrollTo","scrollY","hasScrollTop","scrollX","innerWidth","innerHeight","geom","compatible","isDefaultPrevented","eventMethods","predicate","sourceMethod","ns","createProxy","originalEvent","ignoreProperties","$this","findHandler","unregister","ready","register","stop","keyCode","stopPropagation","evented","Event","_args","readyRE","shortcuts","registry","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","charCode","shortcutKeys","shortcutKey","charCodeAt","keyCodeLookup","regKey","eventer","stopImmediatePropagation","getEventCtor","NativeEvents","EventCtors","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","matcherFor","matcher","removing","removeEventListener","EventsHandler","_handler","specialEvent","bindingEvent","bindType","bindEventName","special","draggable","Draggable","droppable","Droppable","dnd","DndManager","dragSource","handleElm","draggingOffsetX","parseInt","pageX","draggingOffsetY","pageY","ghost","transfer","dragging","draggingClass","draggingGhost","draggingTransfer","dataTransfer","setDragImage","effectAllowed","over","dropped","manager","handle","hoverClass","activeClass","acceptable","e2","overElm","dropEffect","dropzone","droppedCallback","enterdCount","types","webkitGetAsEntry","getAsEntry","webentry","files","pastezone","pastedCallback","pasted","clipboardData","getAsFile","picker","selectFiles","pickedFiles","maxFileSize","fileSelected","directory","picked","fileInput","onchange","entries","webkitEntries","webkitdirectory","upload","initDataSettings","o","chunkedUpload","initXHRData","formData","multipart","contentRange","blob","uploadName","encodeURI","getUploadedBytes","jqXHR","range","upperBytesPos","BitrateTimer","timestamp","now","loaded","bitrate","getBitrate","interval","timeDiff","testOnly","uploadedBytes","fs","ub","mcs","maxChunkSize","blobSlice","dfd","i18n","_getXHRPromise","currentLoaded","_progress","chunkSize","ajax","textStatus","lengthComputable","errorThrown","xoptions","singleFileUploads","limitMultiFileUploads","limitMultiFileUploadSize","limitMultiFileUploadSizeOverhead","sequentialUploads","limitConcurrentUploads","recalculateProgress","progressInterval","bitrateInterval","autoUpload","messages","form","serializeArray","fileupload","process","webkitSlice","mozSlice","_bitrateTimer","jqXhr","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","filer","readFile","reader","FileReader","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","writeFile","msSaveBlob","dataURItoBlob","createObjectURL","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","animationName","animationDuration","animationTiming","animationEnd","supportedTransforms","transitionEnd","transitionProperty","transitionDuration","transitionDelay","transitionTiming","cssReset","clientLeft","scrollToTop","speed","scale","scrollFrom","runEvery","freq","setInterval","clearInterval","toggle","fadeTo","fadeIn","fadeOut","fadeToggle","ceasing","allback","slideDown","visibility","overflow","slideUp","queue","slideToggle","animationDelay","fast","slow","getMatrix","radian","Cos","cos","Sin","sin","M11","M12","M21","M22","getZoom","el","matrix","css3Transform","toFixed","transformData","_createApiMethod","calcFunc","calcs","vertical","PI","horizontal","rotate","degress","hZoom","vZoom","zoomin","zoomout","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_some_chk","some","wrapper_name_value","newValue","wrapper_value","isQ","rquickExpr","NodeList","wrapper_node_operation","argType","toArray","is","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","detach","fnOver","fnOut","Dimension","margin","mb","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","andSelf","addBack","place","addContent","replaceClass","newClass","oldClass","inst","ImagesLoaded","images","viewer","img","_init","Image","border","padding","_load","_dispose","failered","dispose","elementNodeTypes","1","9","11","onAlways","getImages","bind","addElementImages","addImage","background","addElementBackgroundImages","childImgs","reURL","backgroundImage","addBackground","loadingImage","LoadingImage","PreloadImage","_this","progressedCount","hasAnyBroken","isLoaded","debug","log","isComplete","getIsImageComplete","naturalWidth","proxyImage","handleEvent","unbindEvents","imagesLoaded","models","methodMap","read","sync","entity","emulateHTTP","emulateJSON","urlError","_method","Entity","fetch","resp","serverAttrs","wrapError","save","destroy","stopListening","encodeURIComponent","Collection","entities","comparator","_reset","setOptions","addOptions","at","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","_place","choices","layoutNode","aroundNodeCoords","win","view","best","choice","corner","spaceAvailable","w","L","R","M","h","T","B","aroundCorner","bb","startXpos","startYpos","startX","startY","endX","endY","corners","c","anchor","positions","leftToRight","aroundNodePos","domGeometry","anchorBorder","getBorderExtents","anchorChildBorder","nodeBorder","nodeChildBorder","sawPosAbsolute","domStyle","parentPos","pcs","bottomYCoord","rightXCoord","kernel","deprecated","ltr","movable","updateWithTouchData","changedTouches","downButton","originalPos","handleEl","auto","constraints","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","cursor","docSize","screenX","screenY","move","deltaX","deltaY","minX","maxX","minY","maxY","mover","resizable","touchActionNone","direction","grabber","startSize","currentSize","resizer","scripter","scriptsByUrl","scriptElementsById","loadJavaScript","deleteJavaScript","classPrefix","data-resize-handler","resizing","resizingCallback","startDim","rectDim","startPos","unselect","_delegator","domNode","HTMLElement","VisualElement","batch","action","widget","delegateEventSplitter","Widget","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","undelegate","_createElement","_setAttributes","main"],"mappings":"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","file":"../skylarkjs.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylarkjs/skylark',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName-\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && url.startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\n/**\n * skylark-router - An Elegant HTML5 Routing Framework.\n * @author Hudaokeji Co.,Ltd\n * @version v0.9.6-beta\n * @link www.skylarkjs.org\n * @license MIT\n */\ndefine('skylark-router/router',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n\r\n    var _curCtx,\r\n        _prevCtx,\r\n        _baseUrl,\r\n        _homePath,\r\n        _routes = {},\r\n        _cache = {},\r\n        _hub = new langx.Evented();\r\n\r\n    function createEvent(type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n    function current() {\r\n        return _curCtx;\r\n    }\r\n\r\n    // refresh the current route\r\n    function dispatch(ctx) {\r\n\r\n        if (_curCtx) {\r\n            var ret = _curCtx.route.exit({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            }, true);\r\n            if (!ret) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        _prevCtx = _curCtx;\r\n        _curCtx = ctx;\r\n        if (!_curCtx.route) {\r\n            var m = map(_curCtx.path);\r\n            _curCtx.route = m.route;\r\n            _curCtx.params = m.params;\r\n        }\r\n\r\n        var r = _curCtx.route.enter({\r\n            force: _curCtx.force,\r\n            path: _curCtx.path,\r\n            params: _curCtx.params\r\n        },true);\r\n\r\n        langx.Deferred.when(r).then(function() {\r\n            _hub.trigger(createEvent(\"routing\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n\r\n            _curCtx.route.enter({\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },false);\r\n\r\n            if (_prevCtx) {\r\n                _prevCtx.route.exit({\r\n                    path: _prevCtx.path,\r\n                    params: _prevCtx.params\r\n                }, false);\r\n            }\r\n\r\n            _hub.trigger(createEvent(\"routed\", {\r\n                current: _curCtx,\r\n                previous: _prevCtx\r\n            }));\r\n        });\r\n    }\r\n\r\n    function go(path, force) {\r\n        if (!force && _curCtx && _curCtx.path == path) {\r\n            return false;\r\n        }\r\n        var ctx = map(path);\r\n        if (ctx) {\r\n            ctx.path = path;\r\n\r\n            if (router.useHistoryApi) {\r\n                var state = {\r\n                    force: force,\r\n                    path: path\r\n                }\r\n\r\n                window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                window.dispatchEvent(createEvent(\"popstate\", {\r\n                    state: state\r\n                }));\r\n            } else if (router.useHashbang) {\r\n                var newHash = \"#!\" + path;\r\n                if (window.location.hash !== newHash) {\r\n                    window.location.hash = newHash;\r\n                } else {\r\n                    dispatch(ctx);\r\n                };\r\n            } else {\r\n                dispatch(ctx);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function map(path, noCache) {\r\n        var finded = false;\r\n        if (!noCache) {\r\n            finded = _cache[path];\r\n            if (finded) {\r\n                return finded;\r\n            }\r\n        }\r\n        langx.each(_routes, function(name, route) {\r\n            var ret = route.match(path);\r\n            if (ret) {\r\n                finded = {\r\n                    route: route,\r\n                    params: ret\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (finded && !noCache) {\r\n            _cache[path] = finded;\r\n        }\r\n        return finded;\r\n    }\r\n\r\n    function path(routeName, params) {\r\n        var route = _routes[routeName],\r\n            path;\r\n        if (route) {\r\n            path = route.path(params);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function previous() {\r\n        return _prevCtx;\r\n    }\r\n\r\n    function baseUrl(path) {\r\n        if (langx.isDefined(path)) {\r\n            _baseUrl = path;\r\n            return this;\r\n        } else {\r\n            return _baseUrl;\r\n        }\r\n    }\r\n\r\n    function hub(){\r\n        return _hub;\r\n    }\r\n\r\n    function homePath(path) {\r\n        if (langx.isDefined(path)) {\r\n            _homePath = path;\r\n            return this;\r\n        } else {\r\n            return _homePath;\r\n        }\r\n    }\r\n\r\n    function route(name, setting) {\r\n        if (langx.isDefined(setting)) {\r\n            var settings = {};\r\n            settings[name] = setting;\r\n            routes(settings);\r\n            return this;\r\n        } else {\r\n            return _routes[name];\r\n        }\r\n    }\r\n\r\n    function routes(settings) {\r\n        if (!langx.isDefined(settings)) {\r\n            return langx.mixin({}, _routes);\r\n        } else {\r\n            for (var name in settings) {\r\n                _routes[name] = new router.Route(name, settings[name]);\r\n            }\r\n        }\r\n    }\r\n\r\n    //starts routing urls\r\n    function start() {\r\n        if (router.useHashbang == null && router.useHistoryApi == null) {\r\n            if (window.location.host  && window.history.pushState) {\r\n                //web access\r\n                router.useHistoryApi = true;\r\n            } else {\r\n                // local access\r\n                router.useHashbang = true;\r\n            }\r\n        }\r\n\r\n        var initPath = \"\";\r\n\r\n        if (router.useHistoryApi) {\r\n            initPath = window.location.pathname;\r\n            if (_baseUrl === undefined) {\r\n                _baseUrl = initPath.replace(/\\/$/, \"\");\r\n            }\r\n            initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n        } else if (router.useHashbang) {\r\n            initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n        } else {\r\n            initPath = \"/\";\r\n        }\r\n\r\n        if (!initPath.startsWith(\"/\")) {\r\n            initPath = \"/\" + initPath;\r\n        }\r\n        /*\r\n        eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n            var elm = e.currentTarget,\r\n                url = elm.getAttribute(\"href\");\r\n\r\n            if (url == \"#\") {\r\n                return;\r\n            }\r\n            if (url && langx.isSameOrigin(elm.href)) {\r\n                if (url.indexOf(_baseUrl) === 0) {\r\n                    url = url.substr(_baseUrl.length);\r\n                    eventer.stop(e);\r\n                    url = url.replace('#!', '');\r\n                    go(url);\r\n                }\r\n            }\r\n        });\r\n        */\r\n        if (router.useHistoryApi) {\r\n            window.addEventListener(\"popstate\", function(e) {\r\n                if(e.state) dispatch(e.state);\r\n                e.preventDefault();\r\n            });\r\n        } else if (router.useHashbang) {\r\n            window.addEventListener(\"hashchange\", function(e) {\r\n                dispatch({\r\n                    path: window.location.hash.replace(/^#!/, \"\")\r\n                });\r\n                e.preventDefault();\r\n            });\r\n        }\r\n\r\n        go(initPath);\r\n    }\r\n\r\n    var router = function() {\r\n        return router;\r\n    };\r\n\r\n    langx.mixin(router, {\r\n        \"Route\": Route,\r\n\r\n        // Current path being processed\r\n        \"current\": current,\r\n\r\n        // Changes the current path\r\n        \"go\": go,\r\n\r\n        \"map\": map,\r\n\r\n        \"hub\": hub,\r\n\r\n        \"off\": function() {\r\n            _hub.off.apply(_hub, arguments);\r\n        },\r\n\r\n        \"on\": function() {\r\n            _hub.on.apply(_hub, arguments);\r\n        },\r\n\r\n        \"one\": function() {\r\n            _hub.one.apply(_hub, arguments);\r\n        },\r\n\r\n        // Returns the path of the named route\r\n        \"path\": path,\r\n\r\n        \"previous\": previous,\r\n\r\n        \"baseUrl\": baseUrl,\r\n\r\n        \"homePath\": homePath,\r\n\r\n        \"route\": route,\r\n\r\n        \"routes\": routes,\r\n\r\n        //starts routing urls\r\n        \"start\": start,\r\n\r\n        \"trigger\": function(e) {\r\n            _hub.trigger(e);\r\n            return this;\r\n        },\r\n\r\n        \"useHistoryApi\": null,\r\n        \"useHashbang\": null\r\n    });\r\n\r\n    return skylark.router = router;\r\n});\r\n\ndefine('skylarkjs/router',[\r\n    \"skylark-router/router\"\r\n], function(router) {\r\n    return router;\r\n});\r\n\ndefine('skylark-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-router/router\"\r\n], function(skylark, langx, router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.spa = spa;\r\n});\r\n\ndefine('skylarkjs/spa',[\r\n    \"skylark-spa/spa\"\r\n], function(spa) {\r\n    return spa;\r\n});\r\n\ndefine('skylarkjs/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylarkjs/core',[\r\n    \"./skylark\",\r\n    \"./router\",\r\n    \"./spa\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylark-utils/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils/browser',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n    var checkedCssProperties = {\r\n        \"transitionproperty\": \"TransitionProperty\",\r\n    };\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n        testEl.mozMatchesSelector ||\r\n        testEl.oMatchesSelector ||\r\n        testEl.matchesSelector,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {}\r\n\r\n    });\r\n\r\n    testEl = null;\r\n\r\n    return skylark.browser = browser;\r\n});\r\n\ndefine('skylarkjs/browser',[\r\n    \"skylark-utils/browser\"\r\n], function(browser) {\r\n    return browser;\r\n});\r\n\ndefine('skylark-utils/styler',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(property)\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(prop))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm,\"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks : {\r\n\r\n        },\r\n        \r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.styler = styler;\r\n});\r\n\ndefine('skylark-utils/noder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./styler\"\r\n], function(skylark, langx, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    function createElement(tag, props,parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent,node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html) || langx.isNumber(html)) {\r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isChildOf(node, parent,directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return  doc.defaultView || doc.parentWindow;\r\n    } \r\n\r\n\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n\r\n\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n               node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\",e);\r\n            }\r\n         }\r\n        return this;\r\n    }\r\n\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        body : function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow : langx.isWindow,\r\n\r\n        offsetParent : offsetParent,\r\n        \r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow : ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.noder = noder;\r\n});\r\n\ndefine('skylark-utils/css',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\"\r\n], function(skylark, langx, construct) {\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetElementsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetElementsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    function _createStyleSheet() {\r\n        var link = document.createElement(\"link\"),\r\n            id = (count++);\r\n\r\n        link.rel = \"stylesheet\";\r\n        link.type = \"text/css\";\r\n        link.async = false;\r\n        link.defer = false;\r\n\r\n        head.appendChild(link);\r\n        sheetElementsById[id] = link;\r\n\r\n        return id;\r\n    }\r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        createStyleSheet: function(cssText) {\r\n            return _createStyleSheet();\r\n        },\r\n\r\n        loadStyleSheet: function(url, loadedCallback, errorCallback) {\r\n            var sheet = sheetsByUrl[url];\r\n            if (!sheet) {\r\n                sheet = sheetsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                };\r\n            }\r\n\r\n            sheet.loadedCallbacks.push(loadedCallback);\r\n            sheet.errorCallbacks.push(errorCallback);\r\n\r\n            if (sheet.state === 1) {\r\n                sheet.node.onload();\r\n            } else if (sheet.state === -1) {\r\n                sheet.node.onerror();\r\n            } else {\r\n                sheet.id = _createStyleSheet();\r\n                var node = sheet.node = sheetElementsById[sheet.id];\r\n\r\n                startTime = new Date().getTime();\r\n\r\n                node.onload = function() {\r\n                    sheet.state = 1;\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.loadedCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                },\r\n                node.onerror = function() {\r\n                    sheet.state = -1;\r\n                    var callbacks = sheet.errorCallbacks,\r\n                        i = callbacks.length;\r\n\r\n                    while (i--) {\r\n                        callbacks[i]();\r\n                    }\r\n                    sheet.loadedCallbacks = [];\r\n                    sheet.errorCallbacks = [];\r\n                };\r\n\r\n                node.href = sheet.url = url;\r\n\r\n                sheetsByUrl[node.url] = sheet;\r\n\r\n            }\r\n            return sheet.id;\r\n        },\r\n\r\n        deleteSheetRule: function(sheetId, rule) {\r\n            var sheet = sheetElementsById[sheetId];\r\n            if (langx.isNumber(rule)) {\r\n                deleteRuleFunc.call(sheet, rule);\r\n            } else {\r\n                langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                    if (rule === _rule) {\r\n                        deleteRuleFunc.call(sheet, i);\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        deleteRule: function(rule) {\r\n            this.deleteSheetRule(defaultSheetId, rule);\r\n            return this;\r\n        },\r\n\r\n        removeStyleSheet: function(sheetId) {\r\n            if (sheetId === defaultSheetId) {\r\n                throw new Error(\"The default stylesheet can not be deleted\");\r\n            }\r\n            var sheet = sheetElementsById[sheetId];\r\n            delete sheetElementsById[sheetId];\r\n\r\n\r\n            construct.remove(sheet);\r\n            return this;\r\n        },\r\n\r\n        findRules: function(selector, sheetId) {\r\n            //return array of CSSStyleRule objects that match the selector text\r\n            var rules = [],\r\n                filters = parseSelector(selector);\r\n            $(document.styleSheets).each(function(i, styleSheet) {\r\n                if (filterStyleSheet(filters.styleSheet, styleSheet)) {\r\n                    $.merge(rules, $(styleSheet[_rules]).filter(function() {\r\n                        return matchSelector(this, filters.selectorText, filters.styleSheet === \"*\");\r\n                    }).map(function() {\r\n                        return normalizeRule($.support.nativeCSSStyleRule ? this : new CSSStyleRule(this), styleSheet);\r\n                    }));\r\n                }\r\n            });\r\n            return rules.reverse();\r\n        },\r\n\r\n        insertRule: function(selector, css, index) {\r\n            return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n        },\r\n\r\n        insertSheetRule: function(sheetId, selector, css, index) {\r\n            if (!selector || !css) {\r\n                return -1;\r\n            }\r\n\r\n            var sheet = sheetElementsById[sheetId];\r\n            index = index || sheet[rulesPropName].length;\r\n\r\n            return insertRuleFunc.call(sheet, selector, css, index);\r\n        }\r\n    });\r\n\r\n    return skylark.css = css;\r\n});\r\n\ndefine('skylarkjs/css',[\r\n    \"skylark-utils/css\"\r\n], function(css) {\r\n    return css;\r\n});\r\n\ndefine('skylark-utils/finder',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function( elem ) {\r\n            return rheader.test( elem.nodeName );\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function( elem ) {\r\n            return rinputs.test( elem.nodeName );\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd' : function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'text': function(elm){\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\",\"eq\",\"last\"].forEach(function(item){\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo( type ) {\r\n        return function( elem ) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n        pseudos[ i ] = createInputPseudo( i );\r\n    }\r\n    for ( i in { submit: true, reset: true } ) {\r\n        pseudos[ i ] = createButtonPseudo( i );\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value)  +\"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            nativeSelector = tag.toUpperCase() + nativeSelector;\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes,arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                 for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed ;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;            \r\n        }\r\n        \r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node,exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp){\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes,false);\r\n        });    \r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs,true);\r\n        }); \r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes,selector);           \r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes,exp);  \r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n \r\n    };    \r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes,true)\r\n                        });                        \r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ancestors(node, selector,root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node,root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret,selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function find(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm,selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    function findAll(elm,selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm,selector) > -1;\r\n        } else if (langx.isPlainObject(selector)){    \r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling: previousSibling,\r\n\r\n        previousSiblings: previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.finder = finder;\r\n});\r\n\ndefine('skylark-utils/datax',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(skylark, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm,name,value) {\r\n        return this.attr(elm, \"aria-\"+name, value);\r\n    }\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // Read all \"data-*\" attributes from a node\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n        \r\n        attr: attr,\r\n\r\n        cleanData : cleanData,\r\n        \r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return skylark.datax = datax;\r\n});\r\n\ndefine('skylarkjs/datax',[\r\n    \"skylark-utils/datax\"\r\n], function(datax) {\r\n    return datax;\r\n});\r\n\ndefine('skylark-utils/geom',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, noder,styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n\r\n    function scrollbarWidth() {\r\n        if ( cachedScrollbarWidth !== undefined ) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment( \"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\" )[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body,div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n        \r\n        styler.css( div, \"overflow\", \"scroll\" );\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if ( w1 === w2 ) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return ( cachedScrollbarWidth = w1 - w2 );\r\n    }\r\n\r\n    function borderExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth , elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function marginExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n    function marginRect(elm) {\r\n        var obj = this.relativeRect(elm),\r\n            me = this.marginExtents(elm);\r\n\r\n        return {\r\n                left: obj.left,\r\n                top: obj.top,\r\n                width: obj.width + me.left + me.right,\r\n                height: obj.height + me.top + me.bottom\r\n            };\r\n    }\r\n\r\n\r\n    function paddingExtents(elm) {\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top,// - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left,// - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect : marginRect,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth : scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    return skylark.geom = geom;\r\n});\r\n\ndefine('skylark-utils/eventer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            }\r\n        ;\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src,props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy,props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings,function(idx,binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns)===-1) {\r\n                                return ;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return ;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }                           \r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n/*\r\n                    if (event in hover) {\r\n                        var l = self._listener;\r\n                        self._listener = function(e) {\r\n                            var related = e.relatedTarget;\r\n                            if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                return l.apply(this, arguments);\r\n                            }\r\n                        }\r\n                    }\r\n*/\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"delete\": 46\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special : specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.eventer = eventer;\r\n});\r\n\ndefine('skylark-utils/dnd',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height;\r\n\r\n\r\n    var DndManager = langx.Evented.inherit({\r\n      klassName : \"DndManager\",\r\n\r\n      init : function() {\r\n\r\n      },\r\n\r\n      prepare : function(draggable) {\r\n          var e = eventer.create(\"preparing\",{\r\n             dragSource : draggable.elm,\r\n             handleElm : draggable.handleElm\r\n          });\r\n          draggable.trigger(e);\r\n          draggable.dragSource = e.dragSource;\r\n      },\r\n\r\n      start : function(draggable,event) {\r\n\r\n        var p = geom.pagePosition(draggable.elm);\r\n        this.draggingOffsetX = parseInt(event.pageX - p.left);\r\n        this.draggingOffsetY = parseInt(event.pageY - p.top)\r\n\r\n        var e = eventer.create(\"started\",{\r\n          elm : draggable.elm,\r\n          dragSource : draggable.dragSource,\r\n          handleElm : draggable.handleElm,\r\n          ghost : null,\r\n\r\n          transfer : {\r\n          }\r\n        });\r\n\r\n        draggable.trigger(e);\r\n\r\n\r\n        this.dragging = draggable;\r\n\r\n        if (draggable.draggingClass) {\r\n          styler.addClass(draggable.dragSource,draggable.draggingClass);\r\n        }\r\n\r\n        this.draggingGhost = e.ghost;\r\n        if (!this.draggingGhost) {\r\n          this.draggingGhost = draggable.elm;\r\n        }\r\n\r\n        this.draggingTransfer = e.transfer;\r\n        if (this.draggingTransfer) {\r\n\r\n            langx.each(this.draggingTransfer,function(key,value){\r\n                event.dataTransfer.setData(key, value);\r\n            });\r\n        }\r\n\r\n        event.dataTransfer.setDragImage(this.draggingGhost, this.draggingOffsetX, this.draggingOffsetY);\r\n\r\n        event.dataTransfer.effectAllowed = \"copyMove\";\r\n\r\n        this.trigger(e);\r\n      },\r\n\r\n      over : function() {\r\n\r\n      },\r\n\r\n      end : function(dropped) {\r\n        var dragging = this.dragging;\r\n        if (dragging) {\r\n          if (dragging.draggingClass) {\r\n            styler.removeClass(dragging.dragSource,dragging.draggingClass);\r\n          }\r\n        }\r\n\r\n        var e = eventer.create(\"ended\",{\r\n        });        \r\n        this.trigger(e);\r\n\r\n\r\n        this.dragging = null;\r\n        this.draggingTransfer = null;\r\n        this.draggingGhost = null;\r\n        this.draggingOffsetX = null;\r\n        this.draggingOffsetY = null;\r\n      }\r\n    });\r\n\r\n    var manager = new DndManager(),\r\n        draggingHeight,\r\n        placeholders = [];\r\n\r\n\r\n\r\n    var Draggable = langx.Evented.inherit({\r\n      klassName : \"Draggable\",\r\n\r\n      init : function (elm,params) {\r\n        var self = this;\r\n\r\n        self.elm = elm;\r\n        self.draggingClass = params.draggingClass || \"dragging\",\r\n        self._params = params;\r\n\r\n        [\"preparing\",\"started\", \"ended\", \"moving\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n\r\n        eventer.on(elm,{\r\n          \"mousedown\" : function(e) {\r\n            if (params.handle) {\r\n              self.handleElm = finder.closest(e.target,params.handle);\r\n              if (!self.handleElm) {\r\n                return;\r\n              }\r\n            }\r\n            manager.prepare(self);\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", true);\r\n            }\r\n          },\r\n\r\n          \"mouseup\" :   function(e) {\r\n            if (self.dragSource) {\r\n              datax.prop(self.dragSource, \"draggable\", false);\r\n              self.dragSource = null;\r\n              self.handleElm = null;\r\n            }\r\n          },\r\n\r\n          \"dragstart\":  function(e) {\r\n            datax.prop(self.dragSource, \"draggable\", false);\r\n            manager.start(self, e);\r\n          },\r\n\r\n          \"dragend\":   function(e){\r\n            eventer.stop(e);\r\n\r\n            if (!manager.dragging) {\r\n              return;\r\n            }\r\n\r\n            manager.end(false);\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n    var Droppable = langx.Evented.inherit({\r\n      klassName : \"Droppable\",\r\n\r\n      init : function(elm,params) {\r\n        var self = this,\r\n            draggingClass = params.draggingClass || \"dragging\",\r\n            hoverClass,\r\n            activeClass,\r\n            acceptable = true;\r\n\r\n        self.elm = elm;\r\n        self._params = params;\r\n\r\n        [\"started\",\"entered\", \"leaved\", \"dropped\",\"overing\"].forEach(function(eventName) {\r\n            if (langx.isFunction(params[eventName])) {\r\n                self.on(eventName, params[eventName]);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm,{\r\n          \"dragover\" : function(e) {\r\n            e.stopPropagation()\r\n\r\n            if (!acceptable) {\r\n              return\r\n            }\r\n\r\n            var e2 = eventer.create(\"overing\",{\r\n                overElm : e.target,\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : true\r\n            });\r\n            self.trigger(e2);\r\n\r\n            if (e2.acceptable) {\r\n              e.preventDefault() // allow drop\r\n\r\n              e.dataTransfer.dropEffect = \"copyMove\";\r\n            }\r\n\r\n          },\r\n\r\n          \"dragenter\" :   function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            var e2 = eventer.create(\"entered\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n          },\r\n\r\n          \"dragleave\":  function(e) {\r\n            var params = self._params,\r\n                elm = self.elm;\r\n            if (!acceptable) return false\r\n            \r\n            var e2 = eventer.create(\"leaved\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n            \r\n            self.trigger(e2);\r\n\r\n            e.stopPropagation()\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n          },\r\n\r\n          \"drop\":   function(e){\r\n            var params = self._params,\r\n                elm = self.elm;\r\n\r\n            eventer.stop(e); // stops the browser from redirecting.\r\n\r\n            if (!manager.dragging) return\r\n\r\n           // manager.dragging.elm.removeClass('dragging');\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.addClass(elm,hoverClass)\r\n            }\r\n\r\n            var e2 = eventer.create(\"dropped\",{\r\n                transfer : manager.draggingTransfer\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            manager.end(true)\r\n          }\r\n        });\r\n\r\n        manager.on(\"started\",function(e){\r\n            var e2 = eventer.create(\"started\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            acceptable = e2.acceptable;\r\n            hoverClass = e2.hoverClass;\r\n            activeClass = e2.activeClass;\r\n\r\n            if (activeClass && acceptable) {\r\n              styler.addClass(elm,activeClass);\r\n            }\r\n\r\n         }).on(\"ended\" , function(e){\r\n            var e2 = eventer.create(\"ended\",{\r\n                transfer : manager.draggingTransfer,\r\n                acceptable : false\r\n            });\r\n\r\n            self.trigger(e2);\r\n\r\n            if (hoverClass && acceptable) {\r\n              styler.removeClass(elm,hoverClass);\r\n            }\r\n            if (activeClass && acceptable) {\r\n              styler.removeClass(elm,activeClass);\r\n            }\r\n\r\n            acceptable = false;\r\n            activeClass = null;\r\n            hoverClass = null;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n\r\n    function draggable(elm, params) {\r\n      return new Draggable(elm,params);\r\n    }\r\n\r\n    function droppable(elm, params) {\r\n      return new Droppable(elm,params);\r\n    }\r\n\r\n    function dnd(){\r\n      return dnd;\r\n    }\r\n\r\n    langx.mixin(dnd, {\r\n       //params ： {\r\n        //  target : Element or string or function\r\n        //  handle : Element\r\n        //  copy : boolean\r\n        //  placeHolder : \"div\"\r\n        //  hoverClass : \"hover\"\r\n        //  start : function\r\n        //  enter : function\r\n        //  over : function\r\n        //  leave : function\r\n        //  drop : function\r\n        //  end : function\r\n        //\r\n        //\r\n        //}\r\n        draggable   : draggable,\r\n\r\n        //params ： {\r\n        //  accept : string or function\r\n        //  placeHolder\r\n        //\r\n        //\r\n        //\r\n        //}\r\n        droppable : droppable,\r\n\r\n        manager : manager\r\n\r\n\r\n    });\r\n\r\n    return skylark.dnd = dnd;\r\n});\r\n\ndefine('skylarkjs/dnd',[\r\n    \"skylark-utils/dnd\"\r\n], function(dnd) {\r\n    return dnd;\r\n});\r\n\ndefine('skylarkjs/eventer',[\r\n    \"skylark-utils/eventer\"\r\n], function(eventer) {\r\n    return eventer;\r\n});\r\n\ndefine('skylark-utils/filer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, eventer,styler) {\r\n    var concat = Array.prototype.concat,\r\n        on = eventer.on,\r\n        attr = eventer.attr,\r\n        Deferred = langx.Deferred,\r\n\r\n        fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n\r\n    var webentry = (function(){\r\n        function  one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function (file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function (entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function (files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                langx.map(entries, function (entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function(){\r\n                return concat.apply([],arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one : one,\r\n            all : all\r\n        };\r\n    })();\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], {type:mime});\r\n    }\r\n\r\n    var Uploader =  langx.Evented.inherit({\r\n        init :function(options) {\r\n        }\r\n    });\r\n\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n                enterdCount ++;\r\n                styler.addClass(elm,hoverClass)\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                enterdCount--\r\n                if (enterdCount==0) {\r\n                    styler.removeClass(elm,hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\")>-1) {\r\n                styler.removeClass(elm,hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                        items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            langx.map(items, function (item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }                    \r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    function pastezone(elm,params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                    e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                langx.each(items, function (index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n   \r\n    function picker(elm, params) {\r\n        on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false, \r\n            multiple = params.multiple || false,\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\",\r\n                input.style.left = 0,\r\n                input.style.top = 0,\r\n                input.style.opacity = .001,\r\n                document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    function upload(params) {\r\n        var xoptions = langx.mixin({\r\n            contentRange : null, //\r\n\r\n            // The parameter name for the file form data (the request argument name).\r\n            // If undefined or empty, the name property of the file input field is\r\n            // used, or \"files[]\" if the file input name property is also empty,\r\n            // can be a string or an array of strings:\r\n            paramName: undefined,\r\n            // By default, each file of a selection is uploaded using an individual\r\n            // request for XHR type uploads. Set to false to upload file\r\n            // selections in one request each:\r\n            singleFileUploads: true,\r\n            // To limit the number of files uploaded with one XHR request,\r\n            // set the following option to an integer greater than 0:\r\n            limitMultiFileUploads: undefined,\r\n            // The following option limits the number of files uploaded with one\r\n            // XHR request to keep the request size under or equal to the defined\r\n            // limit in bytes:\r\n            limitMultiFileUploadSize: undefined,\r\n            // Multipart file uploads add a number of bytes to each uploaded file,\r\n            // therefore the following option adds an overhead for each file used\r\n            // in the limitMultiFileUploadSize configuration:\r\n            limitMultiFileUploadSizeOverhead: 512,\r\n            // Set the following option to true to issue all file upload requests\r\n            // in a sequential order:\r\n            sequentialUploads: false,\r\n            // To limit the number of concurrent uploads,\r\n            // set the following option to an integer greater than 0:\r\n            limitConcurrentUploads: undefined,\r\n            // By default, XHR file uploads are sent as multipart/form-data.\r\n            // The iframe transport is always using multipart/form-data.\r\n            // Set to false to enable non-multipart XHR uploads:\r\n            multipart: true,\r\n            // To upload large files in smaller chunks, set the following option\r\n            // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n            // or the browser does not support the required Blob API, files will\r\n            // be uploaded as a whole.\r\n            maxChunkSize: undefined,\r\n            // When a non-multipart upload or a chunked multipart upload has been\r\n            // aborted, this option can be used to resume the upload by setting\r\n            // it to the size of the already uploaded bytes. This option is most\r\n            // useful when modifying the options object inside of the \"add\" or\r\n            // \"send\" callbacks, as the options are cloned for each file upload.\r\n            uploadedBytes: undefined,\r\n            // By default, failed (abort or error) file uploads are removed from the\r\n            // global progress calculation. Set the following option to false to\r\n            // prevent recalculating the global progress data:\r\n            recalculateProgress: true,\r\n            // Interval in milliseconds to calculate and trigger progress events:\r\n            progressInterval: 100,\r\n            // Interval in milliseconds to calculate progress bitrate:\r\n            bitrateInterval: 500,\r\n            // By default, uploads are started automatically when adding files:\r\n            autoUpload: true,\r\n\r\n            // Error and info messages:\r\n            messages: {\r\n                uploadedBytes: 'Uploaded bytes exceed file size'\r\n            },\r\n\r\n            // Translation function, gets the message key to be translated\r\n            // and an object with context specific data as arguments:\r\n            i18n: function (message, context) {\r\n                message = this.messages[message] || message.toString();\r\n                if (context) {\r\n                    langx.each(context, function (key, value) {\r\n                        message = message.replace('{' + key + '}', value);\r\n                    });\r\n                }\r\n                return message;\r\n            },\r\n\r\n            // Additional form data to be sent along with the file uploads can be set\r\n            // using this option, which accepts an array of objects with name and\r\n            // value properties, a function returning such an array, a FormData\r\n            // object (for XHR file uploads), or a simple object.\r\n            // The form of the first fileInput is given as parameter to the function:\r\n            formData: function (form) {\r\n                return form.serializeArray();\r\n            },\r\n\r\n            // The add callback is invoked as soon as files are added to the fileupload\r\n            // widget (via file input selection, drag & drop, paste or add API call).\r\n            // If the singleFileUploads option is enabled, this callback will be\r\n            // called once for each file in the selection for XHR file uploads, else\r\n            // once for each file selection.\r\n            //\r\n            // The upload starts when the submit method is invoked on the data parameter.\r\n            // The data object contains a files property holding the added files\r\n            // and allows you to override plugin options as well as define ajax settings.\r\n            //\r\n            // Listeners for this callback can also be bound the following way:\r\n            // .bind('fileuploadadd', func);\r\n            //\r\n            // data.submit() returns a Promise object and allows to attach additional\r\n            // handlers using jQuery's Deferred callbacks:\r\n            // data.submit().done(func).fail(func).always(func);\r\n            add: function (e, data) {\r\n                if (e.isDefaultPrevented()) {\r\n                    return false;\r\n                }\r\n                if (data.autoUpload || (data.autoUpload !== false &&\r\n                        $(this).fileupload('option', 'autoUpload'))) {\r\n                    data.process().done(function () {\r\n                        data.submit();\r\n                    });\r\n                }\r\n            },\r\n\r\n            // Other callbacks:\r\n\r\n            // Callback for the submit event of each file upload:\r\n            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);\r\n\r\n            // Callback for the start of each file upload request:\r\n            // send: function (e, data) {}, // .bind('fileuploadsend', func);\r\n\r\n            // Callback for successful uploads:\r\n            // done: function (e, data) {}, // .bind('fileuploaddone', func);\r\n\r\n            // Callback for failed (abort or error) uploads:\r\n            // fail: function (e, data) {}, // .bind('fileuploadfail', func);\r\n\r\n            // Callback for completed (success, abort or error) requests:\r\n            // always: function (e, data) {}, // .bind('fileuploadalways', func);\r\n\r\n            // Callback for upload progress events:\r\n            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);\r\n\r\n            // Callback for global upload progress events:\r\n            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);\r\n\r\n            // Callback for uploads start, equivalent to the global ajaxStart event:\r\n            // start: function (e) {}, // .bind('fileuploadstart', func);\r\n\r\n            // Callback for uploads stop, equivalent to the global ajaxStop event:\r\n            // stop: function (e) {}, // .bind('fileuploadstop', func);\r\n\r\n            // Callback for change events of the fileInput(s):\r\n            // change: function (e, data) {}, // .bind('fileuploadchange', func);\r\n\r\n            // Callback for paste events to the pasteZone(s):\r\n            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);\r\n\r\n            // Callback for drop events of the dropZone(s):\r\n            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);\r\n\r\n            // Callback for dragover events of the dropZone(s):\r\n            // dragover: function (e) {}, // .bind('fileuploaddragover', func);\r\n\r\n            // Callback for the start of each chunk upload request:\r\n            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);\r\n\r\n            // Callback for successful chunk uploads:\r\n            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);\r\n\r\n            // Callback for failed (abort or error) chunk uploads:\r\n            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);\r\n\r\n            // Callback for completed (success, abort or error) chunk upload requests:\r\n            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);\r\n\r\n            // The plugin options are used as settings object for the ajax calls.\r\n            // The following are jQuery ajax settings required for the file uploads:\r\n            processData: false,\r\n            contentType: false,\r\n            cache: false\r\n        },params);\r\n\r\n        var blobSlice = function () {\r\n            var slice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n            return slice.apply(this, arguments);\r\n        },ajax = function(data) {\r\n            return langx.Xhr.request(data.url,data);\r\n        };\r\n\r\n        function initDataSettings(o) {\r\n            o.type = o.type || \"POST\";\r\n\r\n            if (!chunkedUpload(o, true)) {\r\n                if (!o.data) {\r\n                    initXHRData(o);\r\n                }\r\n                //initProgressListener(o);\r\n            }\r\n        }\r\n\r\n        function initXHRData(o) {\r\n            var that = this,\r\n                formData,\r\n                file = o.files[0],\r\n                // Ignore non-multipart setting if not supported:\r\n                multipart = o.multipart,\r\n                paramName = langx.type(o.paramName) === 'array' ?\r\n                    o.paramName[0] : o.paramName;\r\n\r\n            o.headers = langx.mixin({}, o.headers);\r\n            if (o.contentRange) {\r\n                o.headers['Content-Range'] = o.contentRange;\r\n            }\r\n            if (!multipart) {\r\n                o.headers['Content-Disposition'] = 'attachment; filename=\"' +\r\n                    encodeURI(file.name) + '\"';\r\n                o.contentType = file.type || 'application/octet-stream';\r\n                o.data = o.blob || file;\r\n            } else {\r\n                formData = new FormData();\r\n                if (o.blob) {\r\n                    formData.append(paramName, o.blob, file.name);\r\n                } else {\r\n                    langx.each(o.files, function (index, file) {\r\n                        // This check allows the tests to run with\r\n                        // dummy objects:\r\n                        formData.append(\r\n                            (langx.type(o.paramName) === 'array' &&\r\n                                o.paramName[index]) || paramName,\r\n                            file,\r\n                            file.uploadName || file.name\r\n                        );\r\n                    });                    \r\n                }                \r\n                o.data = formData;\r\n            }\r\n            // Blob reference is not needed anymore, free memory:\r\n            o.blob = null;\r\n        }\r\n\r\n        function getTotal(files) {\r\n            var total = 0;\r\n            langx.each(files, function (index, file) {\r\n                total += file.size || 1;\r\n            });\r\n            return total;\r\n        }\r\n\r\n        function getUploadedBytes(jqXHR) {\r\n            var range = jqXHR.getResponseHeader('Range'),\r\n                parts = range && range.split('-'),\r\n                upperBytesPos = parts && parts.length > 1 &&\r\n                    parseInt(parts[1], 10);\r\n            return upperBytesPos && upperBytesPos + 1;\r\n        }\r\n\r\n        function initProgressObject(obj) {\r\n            var progress = {\r\n                loaded: 0,\r\n                total: 0,\r\n                bitrate: 0\r\n            };\r\n            if (obj._progress) {\r\n                langx.mixin(obj._progress, progress);\r\n            } else {\r\n                obj._progress = progress;\r\n            }\r\n        }\r\n\r\n        function BitrateTimer() {\r\n            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());\r\n            this.loaded = 0;\r\n            this.bitrate = 0;\r\n            this.getBitrate = function (now, loaded, interval) {\r\n                var timeDiff = now - this.timestamp;\r\n                if (!this.bitrate || !interval || timeDiff > interval) {\r\n                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n                    this.loaded = loaded;\r\n                    this.timestamp = now;\r\n                }\r\n                return this.bitrate;\r\n            };\r\n        }\r\n\r\n        function chunkedUpload(options, testOnly) {\r\n            options.uploadedBytes = options.uploadedBytes || 0;\r\n            var that = this,\r\n                file = options.files[0],\r\n                fs = file.size,\r\n                ub = options.uploadedBytes,\r\n                mcs = options.maxChunkSize || fs,\r\n                slice = blobSlice,\r\n                dfd = new Deferred(),\r\n                promise = dfd.promise,\r\n                jqXHR,\r\n                upload;\r\n            if (!(slice && (ub || mcs < fs)) ||\r\n                    options.data) {\r\n                return false;\r\n            }\r\n            if (testOnly) {\r\n                return true;\r\n            }\r\n            if (ub >= fs) {\r\n                file.error = options.i18n('uploadedBytes');\r\n                return this._getXHRPromise(\r\n                    false,\r\n                    options.context,\r\n                    [null, 'error', file.error]\r\n                );\r\n            }\r\n            // The chunk upload method:\r\n            upload = function () {\r\n                // Clone the options object for each chunk upload:\r\n                var o = langx.mixin({}, options),\r\n                    currentLoaded = o._progress.loaded;\r\n                o.blob = slice.call(\r\n                    file,\r\n                    ub,\r\n                    ub + mcs,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                o.chunkSize = o.blob.size;\r\n                // Expose the chunk bytes position range:\r\n                o.contentRange = 'bytes ' + ub + '-' +\r\n                    (ub + o.chunkSize - 1) + '/' + fs;\r\n                // Process the upload data (the blob and potential form data):\r\n                initXHRData(o);\r\n                // Add progress listeners for this chunk upload:\r\n                //initProgressListener(o);\r\n                jqXHR = $.ajax(o).done(function (result, textStatus, jqXHR) {\r\n                        ub = getUploadedBytes(jqXHR) ||\r\n                            (ub + o.chunkSize);\r\n                        // Create a progress event if no final progress event\r\n                        // with loaded equaling total has been triggered\r\n                        // for this chunk:\r\n                        if (currentLoaded + o.chunkSize - o._progress.loaded) {\r\n                            dfd.progress({\r\n                                lengthComputable: true,\r\n                                loaded: ub - o.uploadedBytes,\r\n                                total: ub - o.uploadedBytes\r\n                            });\r\n                        }\r\n                        options.uploadedBytes = o.uploadedBytes = ub;\r\n                        o.result = result;\r\n                        o.textStatus = textStatus;\r\n                        o.jqXHR = jqXHR;\r\n                        //that._trigger('chunkdone', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        if (ub < fs) {\r\n                            // File upload not yet complete,\r\n                            // continue with the next chunk:\r\n                            upload();\r\n                        } else {\r\n                            dfd.resolveWith(\r\n                                o.context,\r\n                                [result, textStatus, jqXHR]\r\n                            );\r\n                        }\r\n                    })\r\n                    .fail(function (jqXHR, textStatus, errorThrown) {\r\n                        o.jqXHR = jqXHR;\r\n                        o.textStatus = textStatus;\r\n                        o.errorThrown = errorThrown;\r\n                        //that._trigger('chunkfail', null, o);\r\n                        //that._trigger('chunkalways', null, o);\r\n                        dfd.rejectWith(\r\n                            o.context,\r\n                            [jqXHR, textStatus, errorThrown]\r\n                        );\r\n                    });\r\n            };\r\n            //this._enhancePromise(promise);\r\n            promise.abort = function () {\r\n                return jqXHR.abort();\r\n            };\r\n            upload();\r\n            return promise;\r\n        }\r\n        \r\n        initDataSettings(xoptions);\r\n\r\n        xoptions._bitrateTimer = new BitrateTimer();\r\n\r\n        var jqXhr = chunkedUpload(xoptions) || ajax(xoptions);\r\n\r\n        jqXhr.options = xoptions;\r\n\r\n        return jqXhr;\r\n    }\r\n\r\n    var filer = function() {\r\n        return filer;\r\n    };\r\n\r\n    langx.mixin(filer , {\r\n        dropzone: dropzone,\r\n\r\n        pastezone: pastezone,\r\n\r\n        picker: picker,\r\n\r\n        select : select,\r\n\r\n        upload  : upload,\r\n\r\n        readFile : function(file,params) {\r\n            params = params || {};\r\n            var d = new Deferred,\r\n                reader = new FileReader();\r\n            \r\n            reader.onload = function(evt) {\r\n                d.resolve(evt.target.result);\r\n            };\r\n            reader.onerror = function(e) {\r\n                var code = e.target.error.code;\r\n                if (code === 2) {\r\n                    alert('please don\\'t open this page using protocol fill:///');\r\n                } else {\r\n                    alert('error code: ' + code);\r\n                }\r\n            };\r\n            \r\n            if (params.asArrayBuffer){\r\n                reader.readAsArrayBuffer(file);\r\n            } else if (params.asDataUrl) {\r\n                reader.readAsDataURL(file);                \r\n            } else if (params.asText) {\r\n                reader.readAsText(file);\r\n            } else {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n\r\n            return d.promise;\r\n        },\r\n         \r\n        writeFile : function(data,name) {\r\n            if (window.navigator.msSaveBlob) { \r\n               if (langx.isString(data)) {\r\n                   data = dataURItoBlob(data);\r\n               }\r\n               window.navigator.msSaveBlob(data, name);\r\n            } else {\r\n                var a = document.createElement('a');\r\n                if (data instanceof Blob) {\r\n                    data = langx.URL.createObjectURL(data);\r\n                }\r\n                a.href = data;\r\n                a.setAttribute('download', name || 'noname');\r\n                a.dispatchEvent(new CustomEvent('click'));\r\n            }              \r\n        }\r\n\r\n    });\r\n\r\n    return skylark.filer = filer;\r\n});\r\n\ndefine('skylarkjs/filer',[\r\n    \"skylark-utils/filer\"\r\n], function(filer) {\r\n    return filer;\r\n});\r\n\ndefine('skylarkjs/finder',[\r\n    \"skylark-utils/finder\"\r\n], function(finder) {\r\n    return finder;\r\n});\r\n\ndefine('skylark-utils/fx',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + properties[key] + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    cssValues[key] = properties[key];\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function slideDown(elm,duration,callback) {    \r\n    \r\n        // get the element position to restore it then\r\n        var position = styler.css(elm,'position');\r\n        \r\n        // show element if it is hidden\r\n        show(elm);\r\n        \r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm,{\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n        \r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm,'margin-top');\r\n        var marginBottom = styler.css(elm,'margin-bottom');\r\n        var paddingTop = styler.css(elm,'padding-top');\r\n        var paddingBottom = styler.css(elm,'padding-bottom');\r\n        var height = styler.css(elm,'height');\r\n        \r\n        // set initial css for animation\r\n        styler.css(elm,{\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        \r\n        // animate to gotten height, margin and padding\r\n        animate(elm,{\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration : duration,\r\n            complete: function(){\r\n                if (callback) {\r\n                    callback.apply(elm); \r\n                }\r\n            }    \r\n        }\r\n    );\r\n        \r\n        return this;\r\n    };\r\n\r\n    function slideUp(elm,duration,callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n                   \r\n            // get the element position to restore it then\r\n            var position = styler.css(elm,'position');\r\n            \r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm,'height');\r\n            var marginTop = styler.css(elm,'margin-top');\r\n            var marginBottom = styler.css(elm,'margin-bottom');\r\n            var paddingTop = styler.css(elm,'padding-top');\r\n            var paddingBottom = styler.css(elm,'padding-bottom');\r\n            \r\n            // set initial css for animation\r\n            styler.css(elm,{\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n            \r\n            // animate element height, margin and padding to zero\r\n            animate(elm,{\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, { \r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function(){\r\n                    hide(elm);\r\n                    styler.css(elm,{\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm); \r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /* SlideToggle */\r\n    function slideToggle(elm,duration,callback) {\r\n    \r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm,duration,callback);\r\n        } \r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm,duration,callback);\r\n        }\r\n        return this;\r\n    };\r\n\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate: animate,\r\n        fadeIn: fadeIn,\r\n        fadeOut: fadeOut,\r\n        fadeTo: fadeTo,\r\n        fadeToggle: fadeToggle,\r\n        hide: hide,\r\n        scrollToTop: scrollToTop,\r\n\r\n        slideDown : slideDown,\r\n        slideToggle : slideToggle,\r\n        slideUp : slideUp,\r\n        show: show,\r\n        toggle: toggle\r\n    });\r\n\r\n    return skylark.fx = fx;\r\n});\ndefine('skylarkjs/fx',[\r\n    \"skylark-utils/fx\"\r\n], function(fx) {\r\n    return fx;\r\n});\r\n\ndefine('skylarkjs/geom',[\r\n    \"skylark-utils/geom\"\r\n], function(geom) {\r\n    return geom;\r\n});\r\n\ndefine('skylark-utils/transforms',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./datax\",\r\n    \"./styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.transforms = transforms;\r\n});\r\n\ndefine('skylark-utils/query',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = $.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return $(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                return this.length > 0 && finder.matches(this[0], selector)\r\n            },\r\n\r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            show: wrapper_every_act(fx.show, fx),\r\n\r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function() {\r\n                if (!this.length) return\r\n\r\n                var elem = this[0];\r\n\r\n                return geom.relativePosition(elem);\r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.height, geom, geom.height);\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    return skylark.query = query;\r\n\r\n});\ndefine('skylark-utils/images',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./datax\",\r\n    \"./transforms\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,geom,styler,datax,transforms,$) {\r\n\r\n  var elementNodeTypes = {\r\n    1: true,\r\n    9: true,\r\n    11: true\r\n  };\r\n\r\n  var ImagesLoaded = langx.Evented.inherit({\r\n   /**\r\n   * @param {Array, Element, NodeList, String} elem\r\n   * @param {Object or Function} options - if function, use as callback\r\n   * @param {Function} onAlways - callback function\r\n   */\r\n    init : function(elem, options, onAlways) {\r\n      // use elem as selector string\r\n      if ( typeof elem == 'string' ) {\r\n        elem = document.querySelectorAll( elem );\r\n      }\r\n\r\n      this.elements = langx.makeArray( elem );\r\n      this.options = langx.mixin( {}, this.options );\r\n\r\n      if ( typeof options == 'function' ) {\r\n        onAlways = options;\r\n      } else {\r\n        langx.mixin( this.options, options );\r\n      }\r\n\r\n      if ( onAlways ) {\r\n        this.on( 'always', onAlways );\r\n      }\r\n\r\n      this.getImages();\r\n\r\n     // HACK check async to allow time to bind listeners\r\n      setTimeout( function() {\r\n        this.check();\r\n      }.bind( this ));\r\n\r\n    },\r\n\r\n    options : {},\r\n\r\n    getImages : function() {\r\n      this.images = [];\r\n\r\n      // filter & find items if we have an item selector\r\n      this.elements.forEach( this.addElementImages, this );\r\n    },\r\n\r\n    /**\r\n     * @param {Node} element\r\n     */\r\n    addElementImages : function( elem ) {\r\n      // filter siblings\r\n      if ( elem.nodeName == 'IMG' ) {\r\n        this.addImage( elem );\r\n      }\r\n      // get background image on element\r\n      if ( this.options.background === true ) {\r\n        this.addElementBackgroundImages( elem );\r\n      }\r\n\r\n      // find children\r\n      // no non-element nodes, #143\r\n      var nodeType = elem.nodeType;\r\n      if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\r\n        return;\r\n      }\r\n      var childImgs = elem.querySelectorAll('img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        var img = childImgs[i];\r\n        this.addImage( img );\r\n      }\r\n\r\n      // get child background images\r\n      if ( typeof this.options.background == 'string' ) {\r\n        var children = elem.querySelectorAll( this.options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          var child = children[i];\r\n          this.addElementBackgroundImages( child );\r\n        }\r\n      }\r\n    },\r\n\r\n    addElementBackgroundImages : function( elem ) {\r\n      var style = getComputedStyle( elem );\r\n      if ( !style ) {\r\n        // Firefox returns null if in a hidden iframe https://bugzil.la/548397\r\n        return;\r\n      }\r\n      // get url inside url(\"...\")\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( style.backgroundImage );\r\n      while ( matches !== null ) {\r\n        var url = matches && matches[2];\r\n        if ( url ) {\r\n          this.addBackground( url, elem );\r\n        }\r\n        matches = reURL.exec( style.backgroundImage );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {Image} img\r\n     */\r\n    addImage : function( img ) {\r\n      var loadingImage = new LoadingImage( img );\r\n      this.images.push( loadingImage );\r\n    },\r\n\r\n    addBackground : function( url, elem ) {\r\n      var background = new PreloadImage( url, elem );\r\n      this.images.push( background );\r\n    },\r\n\r\n    check : function() {\r\n      var _this = this;\r\n      this.progressedCount = 0;\r\n      this.hasAnyBroken = false;\r\n      // complete if no images\r\n      if ( !this.images.length ) {\r\n        this.complete();\r\n        return;\r\n      }\r\n\r\n      function onProgress( e ) {\r\n        // HACK - Chrome triggers event before object properties have changed. #83\r\n        setTimeout( function() {\r\n          _this.progress( e );\r\n        });\r\n      }\r\n\r\n      this.images.forEach( function( loadingImage ) {\r\n        loadingImage.one( 'progress', onProgress );\r\n        loadingImage.check();\r\n      });\r\n    },\r\n\r\n    progress : function( e ) {\r\n\r\n      this.progressedCount++;\r\n      this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded;\r\n      // progress event\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : e.img,\r\n        element : e.element,\r\n        message : e.message,\r\n        isLoaded : e.isLoaded\r\n      }));\r\n\r\n      // check if completed\r\n      if ( this.progressedCount == this.images.length ) {\r\n        this.complete();\r\n      }\r\n\r\n      if ( this.options.debug && console ) {\r\n        console.log( 'progress: ' + message, e.target, e.element );\r\n      }\r\n    },\r\n\r\n    complete : function() {\r\n      var eventName = this.hasAnyBroken ? 'fail' : 'done';\r\n      this.isComplete = true;\r\n      this.trigger(langx.createEvent(eventName,{\r\n        images : this.images\r\n      }));\r\n    }\r\n\r\n  });\r\n \r\n\r\n  // --------------------------  -------------------------- //\r\n\r\n  var LoadingImage = langx.Evented.inherit({\r\n    init: function( img ) {\r\n      this.img = img;\r\n    },\r\n    check : function() {\r\n      // If complete is true and browser supports natural sizes,\r\n      // try to check for image status manually.\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        // report based on naturalWidth\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        return;\r\n      }\r\n\r\n      // If none of the checks above matched, simulate loading on detached element.\r\n      this.proxyImage = new Image();\r\n      this.proxyImage.addEventListener( 'load', this );\r\n      this.proxyImage.addEventListener( 'error', this );\r\n      // bind to image as well for Firefox. #191\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.proxyImage.src = this.img.src;\r\n    },\r\n\r\n    getIsImageComplete : function() {\r\n      return this.img.complete && this.img.naturalWidth !== undefined;\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img, \r\n        element : this.img,\r\n        message : message ,\r\n        isLoaded : isLoaded\r\n      }));\r\n    },\r\n // ----- events ----- //\r\n    // trigger specified handler for event type\r\n    handleEvent : function( event ) {\r\n      var method = 'on' + event.type;\r\n      if ( this[ method ] ) {\r\n        this[ method ]( event );\r\n      }\r\n    },\r\n\r\n    onload : function() {\r\n      this.confirm( true, 'onload' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    onerror : function() {\r\n      this.confirm( false, 'onerror' );\r\n      this.unbindEvents();\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.proxyImage.removeEventListener( 'load', this );\r\n      this.proxyImage.removeEventListener( 'error', this );\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n  });\r\n\r\n\r\n  // -------------------------- PreloadImage -------------------------- //\r\n  var PreloadImage = LoadingImage.inherit({\r\n\r\n    init : function( url, element ) {\r\n      this.url = url;\r\n      this.element = element;\r\n      this.img = new Image();\r\n    },\r\n\r\n    check : function() {\r\n      this.img.addEventListener( 'load', this );\r\n      this.img.addEventListener( 'error', this );\r\n      this.img.src = this.url;\r\n      // check if image is already complete\r\n      var isComplete = this.getIsImageComplete();\r\n      if ( isComplete ) {\r\n        this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\r\n        this.unbindEvents();\r\n      }\r\n    },\r\n\r\n    unbindEvents : function() {\r\n      this.img.removeEventListener( 'load', this );\r\n      this.img.removeEventListener( 'error', this );\r\n    },\r\n\r\n    confirm : function( isLoaded, message ) {\r\n      this.isLoaded = isLoaded;\r\n      this.trigger( langx.createEvent('progress', {\r\n        img : this.img,\r\n        element : this.element, \r\n        message : message,\r\n        isLoaded : isLoaded \r\n      }));\r\n    }\r\n  });\r\n\r\n  function loaded(el,options, callback ) {\r\n      var inst = new ImagesLoaded( el, options, callback );\r\n\r\n      var d = new langx.Deferred();\r\n      \r\n      inst.on(\"progress\",function(e){\r\n        d.progress(e);\r\n      });\r\n\r\n      inst.on(\"done\",function(e){\r\n        d.resolve(e.images);\r\n      });\r\n\r\n      inst.on(\"fail\",function(e){\r\n        d.reject(e);\r\n      });\r\n\r\n      return d.promise;\r\n  }\r\n\r\n  function preload(urls,options) {\r\n\r\n  }\r\n\r\n  $.fn.imagesLoaded = function( options, callback ) {\r\n      return loaded(this,options,callback);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    loaded : loaded,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.images = images;\r\n});\r\n\ndefine('skylarkjs/images',[\r\n    \"skylark-utils/images\"\r\n], function(images) {\r\n    return images;\r\n});\r\n\ndefine('skylark-utils/models',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark,langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"init\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return skylark.models = models;\r\n});\r\n\ndefine('skylarkjs/models',[\r\n    \"skylark-utils/models\"\r\n], function(models) {\r\n    return models;\r\n});\r\n\ndefine('skylark-utils/mover',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./styler\"\r\n],function(skylark, langx,noder,datax,geom,eventer,styler){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    function _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n        // summary:\r\n        //      Given a list of spots to put node, put it at the first spot where it fits,\r\n        //      of if it doesn't fit anywhere then the place with the least overflow\r\n        // choices: Array\r\n        //      Array of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n        //      Above example says to put the top-left corner of the node at (10,20)\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n        //      for things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        //      It also passes in the available size for the popup, which is useful for tooltips to\r\n        //      tell them that their width is limited to a certain amount.   layoutNode() may return a value expressing\r\n        //      how much the popup had to be modified to fit into the available space.   This is used to determine\r\n        //      what the best placement is.\r\n        // aroundNodeCoords: Object\r\n        //      Size of aroundNode, ex: {w: 200, h: 50}\r\n\r\n        // get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n        // viewport over document\r\n\r\n        var doc = noder.ownerDoc(node),\r\n            win = noder.ownerWindow(doc),\r\n            view = geom.size(win);\r\n\r\n        view.left = 0;\r\n        view.top = 0;\r\n\r\n        if(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n            doc.body.appendChild(node);\r\n        }\r\n\r\n        var best = null;\r\n\r\n        some.apply(choices, function(choice){\r\n            var corner = choice.corner;\r\n            var pos = choice.pos;\r\n            var overflow = 0;\r\n\r\n            // calculate amount of space available given specified position of node\r\n            var spaceAvailable = {\r\n                w: {\r\n                    'L': view.left + view.width - pos.x,\r\n                    'R': pos.x - view.left,\r\n                    'M': view.width\r\n                }[corner.charAt(1)],\r\n\r\n                h: {\r\n                    'T': view.top + view.height - pos.y,\r\n                    'B': pos.y - view.top,\r\n                    'M': view.height\r\n                }[corner.charAt(0)]\r\n            };\r\n\r\n            if(layoutNode){\r\n                var res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n                overflow = typeof res == \"undefined\" ? 0 : res;\r\n            }\r\n\r\n            var bb = geom.size(node);\r\n\r\n            // coordinates and size of node with specified corner placed at pos,\r\n            // and clipped by viewport\r\n            var\r\n                startXpos = {\r\n                    'L': pos.x,\r\n                    'R': pos.x - bb.width,\r\n                    'M': Math.max(view.left, Math.min(view.left + view.width, pos.x + (bb.width >> 1)) - bb.width) // M orientation is more flexible\r\n                }[corner.charAt(1)],\r\n\r\n                startYpos = {\r\n                    'T': pos.y,\r\n                    'B': pos.y - bb.height,\r\n                    'M': Math.max(view.top, Math.min(view.top + view.height, pos.y + (bb.height >> 1)) - bb.height)\r\n                }[corner.charAt(0)],\r\n\r\n                startX = Math.max(view.left, startXpos),\r\n                startY = Math.max(view.top, startYpos),\r\n                endX = Math.min(view.left + view.width, startXpos + bb.width),\r\n                endY = Math.min(view.top + view.height, startYpos + bb.height),\r\n                width = endX - startX,\r\n                height = endY - startY;\r\n\r\n            overflow += (bb.width - width) + (bb.height - height);\r\n\r\n            if(best == null || overflow < best.overflow){\r\n                best = {\r\n                    corner: corner,\r\n                    aroundCorner: choice.aroundCorner,\r\n                    left: startX,\r\n                    top: startY,\r\n                    width: width,\r\n                    height: height,\r\n                    overflow: overflow,\r\n                    spaceAvailable: spaceAvailable\r\n                };\r\n            }\r\n\r\n            return !overflow;\r\n        });\r\n\r\n        // In case the best position is not the last one we checked, need to call\r\n        // layoutNode() again.\r\n        if(best.overflow && layoutNode){\r\n            layoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n        }\r\n\r\n\r\n        geom.boundingPosition(node,best);\r\n\r\n        return best;\r\n    }\r\n\r\n    function at(node, pos, corners, padding, layoutNode){\r\n        var choices = map.apply(corners, function(corner){\r\n            var c = {\r\n                corner: corner,\r\n                aroundCorner: reverse[corner],  // so TooltipDialog.orient() gets aroundCorner argument set\r\n                pos: {x: pos.x,y: pos.y}\r\n            };\r\n            if(padding){\r\n                c.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n                c.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n            }\r\n            return c;\r\n        });\r\n\r\n        return _place(node, choices, layoutNode);\r\n    }\r\n\r\n    function around(\r\n        /*DomNode*/     node,\r\n        /*DomNode|__Rectangle*/ anchor,\r\n        /*String[]*/    positions,\r\n        /*Boolean*/     leftToRight,\r\n        /*Function?*/   layoutNode){\r\n\r\n        // summary:\r\n        //      Position node adjacent or kitty-corner to anchor\r\n        //      such that it's fully visible in viewport.\r\n        // description:\r\n        //      Place node such that corner of node touches a corner of\r\n        //      aroundNode, and that node is fully visible.\r\n        // anchor:\r\n        //      Either a DOMNode or a rectangle (object with x, y, width, height).\r\n        // positions:\r\n        //      Ordered list of positions to try matching up.\r\n        //\r\n        //      - before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n        //          of RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n        //          with the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n        //      - before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n        //          in the case of RTL scripts like Hebrew and Arabic\r\n        //      - above-centered: drop down is centered above anchor node\r\n        //      - above: drop down goes above anchor node, left sides aligned\r\n        //      - above-alt: drop down goes above anchor node, right sides aligned\r\n        //      - below-centered: drop down is centered above anchor node\r\n        //      - below: drop down goes below anchor node\r\n        //      - below-alt: drop down goes below anchor node, right sides aligned\r\n        // layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n        //      For things like tooltip, they are displayed differently (and have different dimensions)\r\n        //      based on their orientation relative to the parent.   This adjusts the popup based on orientation.\r\n        // leftToRight:\r\n        //      True if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n        //      positions slightly.\r\n        // example:\r\n        //  |   placeAroundNode(node, aroundNode, {'BL':'TL', 'TR':'BR'});\r\n        //      This will try to position node such that node's top-left corner is at the same position\r\n        //      as the bottom left corner of the aroundNode (ie, put node below\r\n        //      aroundNode, with left edges aligned).   If that fails it will try to put\r\n        //      the bottom-right corner of node where the top right corner of aroundNode is\r\n        //      (ie, put node above aroundNode, with right edges aligned)\r\n        //\r\n\r\n        // If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n        var aroundNodePos;\r\n        if(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n            aroundNodePos = domGeometry.position(anchor, true);\r\n\r\n            // For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n            // overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n            // width of either anchor or popup because in both cases the border may be on an inner node.\r\n            if(/^(above|below)/.test(positions[0])){\r\n                var anchorBorder = domGeometry.getBorderExtents(anchor),\r\n                    anchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n                    nodeBorder =  domGeometry.getBorderExtents(node),\r\n                    nodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n                aroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n                aroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n                    Math.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n            }\r\n        }else{\r\n            aroundNodePos = anchor;\r\n        }\r\n\r\n        // Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n        if(anchor.parentNode){\r\n            // ignore nodes between position:relative and position:absolute\r\n            var sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n            var parent = anchor.parentNode;\r\n            while(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n                var parentPos = domGeometry.position(parent, true),\r\n                    pcs = domStyle.getComputedStyle(parent);\r\n                if(/relative|absolute/.test(pcs.position)){\r\n                    sawPosAbsolute = false;\r\n                }\r\n                if(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n                    var bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n                    var rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n                    aroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n                    aroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n                    aroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n                    aroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n                }\r\n                if(pcs.position == \"absolute\"){\r\n                    sawPosAbsolute = true;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n        }           \r\n\r\n        var x = aroundNodePos.x,\r\n            y = aroundNodePos.y,\r\n            width = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n            height = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n        // Convert positions arguments into choices argument for _place()\r\n        var choices = [];\r\n        function push(aroundCorner, corner){\r\n            choices.push({\r\n                aroundCorner: aroundCorner,\r\n                corner: corner,\r\n                pos: {\r\n                    x: {\r\n                        'L': x,\r\n                        'R': x + width,\r\n                        'M': x + (width >> 1)\r\n                    }[aroundCorner.charAt(1)],\r\n                    y: {\r\n                        'T': y,\r\n                        'B': y + height,\r\n                        'M': y + (height >> 1)\r\n                    }[aroundCorner.charAt(0)]\r\n                }\r\n            })\r\n        }\r\n        array.forEach(positions, function(pos){\r\n            var ltr =  leftToRight;\r\n            switch(pos){\r\n                case \"above-centered\":\r\n                    push(\"TM\", \"BM\");\r\n                    break;\r\n                case \"below-centered\":\r\n                    push(\"BM\", \"TM\");\r\n                    break;\r\n                case \"after-centered\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before-centered\":\r\n                    push(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n                    break;\r\n                case \"after\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"before\":\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                case \"below-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"below\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n                    push(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n                    break;\r\n                case \"above-alt\":\r\n                    ltr = !ltr;\r\n                    // fall through\r\n                case \"above\":\r\n                    // first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n                    push(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n                    push(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n                    break;\r\n                default:\r\n                    // To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n                    // Not meant to be used directly.  Remove for 2.0.\r\n                    push(pos.aroundCorner, pos.corner);\r\n            }\r\n        });\r\n\r\n        var position = _place(node, choices, layoutNode, {w: width, h: height});\r\n        position.aroundNodePos = aroundNodePos;\r\n\r\n        return position;\r\n    }\r\n\r\n    function movable(elm, params) {\r\n        function updateWithTouchData(e) {\r\n            var keys, i;\r\n\r\n            if (e.changedTouches) {\r\n                keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                for (i = 0; i < keys.length; i++) {\r\n                    e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        params = params || {};\r\n        var handleEl = params.handle || elm,\r\n            auto = params.auto === false ? false : true,\r\n            constraints = params.constraints,\r\n            overlayDiv,\r\n            doc = params.document || document,\r\n            downButton,\r\n            start,\r\n            stop,\r\n            drag,\r\n            startX,\r\n            startY,\r\n            originalPos,\r\n            size,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped,\r\n\r\n            start = function(e) {\r\n                var docSize = geom.getDocumentSize(doc),\r\n                    cursor;\r\n\r\n                updateWithTouchData(e);\r\n\r\n                e.preventDefault();\r\n                downButton = e.button;\r\n                //handleEl = getHandleEl();\r\n                startX = e.screenX;\r\n                startY = e.screenY;\r\n\r\n                originalPos = geom.relativePosition(elm);\r\n                size = geom.size(elm);\r\n\r\n                // Grab cursor from handle so we can place it on overlay\r\n                cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                overlayDiv = noder.createElement(\"div\");\r\n                styler.css(overlayDiv, {\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: docSize.width,\r\n                    height: docSize.height,\r\n                    zIndex: 0x7FFFFFFF,\r\n                    opacity: 0.0001,\r\n                    cursor: cursor\r\n                });\r\n                noder.append(doc.body, overlayDiv);\r\n\r\n                eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n\r\n            move = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                if (e.button !== 0) {\r\n                    return stop(e);\r\n                }\r\n\r\n                e.deltaX = e.screenX - startX;\r\n                e.deltaY = e.screenY - startY;\r\n\r\n                if (auto) {\r\n                    var l = originalPos.left + e.deltaX,\r\n                        t = originalPos.top + e.deltaY;\r\n                    if (constraints) {\r\n\r\n                        if (l < constraints.minX) {\r\n                            l = constraints.minX;\r\n                        }\r\n\r\n                        if (l > constraints.maxX) {\r\n                            l = constraints.maxX;\r\n                        }\r\n\r\n                        if (t < constraints.minY) {\r\n                            t = constraints.minY;\r\n                        }\r\n\r\n                        if (t > constraints.maxY) {\r\n                            t = constraints.maxY;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                geom.relativePosition(elm, {\r\n                    left: l,\r\n                    top: t\r\n                })\r\n\r\n                e.preventDefault();\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n\r\n            stop = function(e) {\r\n                updateWithTouchData(e);\r\n\r\n                eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                noder.remove(overlayDiv);\r\n\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }\r\n            };\r\n\r\n        eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n    }\r\n\r\n    function mover(){\r\n      return mover;\r\n    }\r\n\r\n    langx.mixin(mover, {\r\n        around : around,\r\n\r\n        at: at, \r\n\r\n        movable: movable\r\n\r\n    });\r\n\r\n    return skylark.mover = mover;\r\n});\r\n\ndefine('skylarkjs/mover',[\r\n    \"skylark-utils/mover\"\r\n], function(mover) {\r\n    return mover;\r\n});\r\n\ndefine('skylarkjs/noder',[\r\n    \"skylark-utils/noder\"\r\n], function(noder) {\r\n    return noder;\r\n});\r\n\ndefine('skylarkjs/query',[\r\n    \"skylark-utils/query\"\r\n], function(query) {\r\n    return query;\r\n});\r\n\ndefine('skylark-utils/resizer',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,finder,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    function resizable(elm, params) {\r\n\r\n        var defaultOptions = {\r\n            // prevents browser level actions like forward back gestures\r\n            touchActionNone: true,\r\n\r\n            direction : {\r\n                top: false, \r\n                left: false, \r\n                right: true, \r\n                bottom: true\r\n            },\r\n            // selector for handle that starts dragging\r\n            handle : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        };\r\n\r\n        params = params || {};\r\n        var handle = params.handle || {},\r\n            handleEl,\r\n            direction = params.direction || defaultOptions.direction,\r\n            startSize,\r\n            currentSize,\r\n            startedCallback = params.started,\r\n            movingCallback = params.moving,\r\n            stoppedCallback = params.stopped;\r\n\r\n        if (langx.isString(handle)) {\r\n            handleEl = finder.find(elm,handle);\r\n        } else if (langx.isHtmlNode(handle)) {\r\n            handleEl = handle;\r\n        }\r\n        mover.movable(handleEl,{\r\n            auto : false,\r\n            started : function(e) {\r\n                startSize = geom.size(elm);\r\n                if (startedCallback) {\r\n                    startedCallback(e);\r\n                }\r\n            },\r\n            moving : function(e) {\r\n                currentSize = {\r\n                };\r\n                if (direction.left || direction.right) {\r\n                    currentSize.width = startSize.width + e.deltaX;\r\n                } else {\r\n                    currentSize.width = startSize.width;\r\n                }\r\n\r\n                if (direction.top || direction.bottom) {\r\n                    currentSize.height = startSize.height + e.deltaY;\r\n                } else {\r\n                    currentSize.height = startSize.height;\r\n                }\r\n\r\n                geom.size(elm,currentSize);\r\n\r\n                if (movingCallback) {\r\n                    movingCallback(e);\r\n                }\r\n            },\r\n            stopped: function(e) {\r\n                if (stoppedCallback) {\r\n                    stoppedCallback(e);\r\n                }                \r\n            }\r\n        });\r\n        \r\n        return {\r\n            // destroys the dragger.\r\n            remove: function() {\r\n                eventer.off(handleEl);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $.fn.resizable = function(params) {\r\n        this.each(function(el){\r\n            resizable(this,params);\r\n        });\r\n    };\r\n\r\n    function resizer(){\r\n      return resizer;\r\n    }\r\n\r\n    langx.mixin(resizer, {\r\n        resizable: resizable\r\n    });\r\n\r\n    return skylark.resizer = resizer;\r\n});\r\n\ndefine('skylarkjs/resizer',[\r\n    \"skylark-utils/resizer\"\r\n], function(resizer) {\r\n    return resizer;\r\n});\r\n\ndefine('skylark-utils/scripter',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        }\r\n    });\r\n\r\n    return skylark.scripter = scripter;\r\n});\r\n\ndefine('skylarkjs/scripter',[\r\n    \"skylark-utils/scripter\"\r\n], function(scripter) {\r\n    return scripter;\r\n});\r\n\ndefine('skylark-utils/selector',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./mover\",\r\n    \"./styler\",\r\n    \"./query\"\r\n],function(skylark, langx,noder,datax,geom,eventer,mover,styler,$){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n\r\n\r\n    var options = {\r\n        // Function which returns custom X and Y coordinates of the mouse\r\n            mousePosFetcher: null,\r\n            // Indicates custom target updating strategy\r\n            updateTarget: null,\r\n            // Function which gets HTMLElement as an arg and returns it relative position\r\n            ratioDefault: 0,\r\n            posFetcher: null,\r\n\r\n            started: null,\r\n            moving: null,\r\n            ended: null,\r\n\r\n            // Resize unit step\r\n            step: 1,\r\n\r\n            // Minimum dimension\r\n            minDim: 32,\r\n\r\n            // Maximum dimension\r\n            maxDim: '',\r\n\r\n            // Unit used for height resizing\r\n            unitHeight: 'px',\r\n\r\n            // Unit used for width resizing\r\n            unitWidth: 'px',\r\n\r\n            // The key used for height resizing\r\n            keyHeight: 'height',\r\n\r\n            // The key used for width resizing\r\n            keyWidth: 'width',\r\n\r\n            // If true, will override unitHeight and unitWidth, on start, with units\r\n            // from the current focused element (currently used only in SelectComponent)\r\n            currentUnit: 1,\r\n\r\n            // Handlers\r\n            direction : {\r\n                tl: 1, // Top left\r\n                tc: 1, // Top center\r\n                tr: 1, // Top right\r\n                cl: 1, // Center left\r\n                cr: 1, // Center right\r\n                bl: 1, // Bottom left\r\n                bc: 1, // Bottom center\r\n                br: 1 // Bottom right,\r\n            },\r\n            handler : {\r\n                border : true,\r\n                grabber: \"\",\r\n                selector: true\r\n            }\r\n        } ,\r\n\r\n\r\n        currentPos,\r\n        startRect,\r\n        currentRect,\r\n        delta;\r\n\r\n    var classPrefix = \"\",\r\n        container,\r\n        handlers,\r\n        target,\r\n        direction ={\r\n            left : true,\r\n            right : true,\r\n            top : true,\r\n            bottom : true\r\n        },\r\n        startSize,\r\n        currentSize,\r\n\r\n        startedCallback,\r\n        resizingCallback,\r\n        stoppedCallback;\r\n\r\n\r\n\r\n    function init (options) {\r\n        options = options || {};\r\n        classPrefix = options.classPrefix || \"\";\r\n\r\n        var appendTo = options.appendTo || document.body;\r\n        container = noder.createElement('div',{\r\n            \"class\" : classPrefix + 'resizer-c'\r\n        });\r\n        noder.append(appendTo,container);\r\n\r\n\r\n        // Create handlers\r\n        handlers = {};\r\n        ['tl', 'tc', 'tr', 'cl', 'cr', 'bl', 'bc', 'br'].forEach(function(n) {\r\n            return handlers[n] = noder.createElement(\"i\",{\r\n                    \"class\" : classPrefix + 'resizer-h ' + classPrefix + 'resizer-h-' + n,\r\n                    \"data-resize-handler\" : n\r\n                });\r\n        });\r\n\r\n        for (var n in handlers) {\r\n            var handler = handlers[n];\r\n            noder.append(container,handler);\r\n            mover.movable(handler,{\r\n                auto : false,\r\n                started : started,\r\n                moving : resizing,\r\n                stopped : stopped\r\n            })\r\n        }\r\n    }\r\n\r\n    function started(e) {\r\n        var handler = e.target;\r\n        startSize = geom.size(target);\r\n        if (startedCallback) {\r\n            startedCallback(e);\r\n        }\r\n    }\r\n\r\n    function resizing(e) {\r\n        currentSize = {};\r\n\r\n        if (direction.left || direction.right) {\r\n            currentSize.width = startSize.width + e.deltaX;\r\n        } else {\r\n            currentSize.width = startSize.width;\r\n        }\r\n\r\n        if (direction.top || direction.bottom) {\r\n            currentSize.height = startSize.height + e.deltaY;\r\n        } else {\r\n            currentSize.height = startSize.height;\r\n        }\r\n\r\n        geom.size(target,currentSize);\r\n        geom.pageRect(container,geom.pageRect(target));\r\n\r\n        if (resizingCallback) {\r\n            resizingCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function stopped(e) {\r\n        if (stoppedCallback) {\r\n            stoppedCallback(e);\r\n        }\r\n\r\n    }\r\n\r\n    function select(el,options) {\r\n        // Avoid focusing on already focused element\r\n        if (el && el === target) {\r\n          return;\r\n        } \r\n\r\n        target = el; \r\n        startDim = rectDim = startPos = null;\r\n\r\n        geom.pageRect(container,geom.pageRect(target));\r\n        styler.show(container);\r\n\r\n    }\r\n\r\n\r\n    function unselect(e) {\r\n        if (container) {\r\n            styler.hide(container);\r\n        }\r\n        target = null;\r\n    }\r\n\r\n    function isHandler(el) {\r\n        if (handlers) {\r\n            for (var n in handlers) {\r\n              if (handlers[n] === el) return true;\r\n            }                \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function docs(el) {\r\n        return [noder.ownerDoc(el), noder.doc()];\r\n    }\r\n\r\n    function selector(){\r\n      return selector;\r\n    }\r\n\r\n    langx.mixin(selector, {\r\n        init : init,\r\n\r\n        select : select,\r\n\r\n        unselect : unselect\r\n\r\n    });\r\n\r\n    return skylark.selector = selector;\r\n});\r\n\ndefine('skylarkjs/selector',[\r\n    \"skylark-utils/selector\"\r\n], function(selector) {\r\n    return selector;\r\n});\r\n\ndefine('skylarkjs/styler',[\r\n    \"skylark-utils/styler\"\r\n], function(styler) {\r\n    return styler;\r\n});\r\n\ndefine('skylark-utils/velm',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(skylark, langx, datax, dnd, eventer, filer, finder, fx, geom, mover, noder, styler) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this.domNode = node;\r\n        }\r\n    });\r\n\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self.domNode,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(ret);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial : function(name,fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./dnd\r\n    velm.delegate([\r\n        \"draggable\",\r\n        \"droppable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./filer\r\n    velm.delegate([\r\n        \"picker\",\r\n        \"dropzone\"\r\n    ], filer);\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./mover\r\n    velm.delegate([\r\n        \"movable\"\r\n    ], dnd);\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n    \r\n    return skylark.velm = velm;\r\n});\r\n\ndefine('skylarkjs/velm',[\r\n    \"skylark-utils/velm\"\r\n], function(velm) {\r\n    return velm;\r\n});\r\n\ndefine('skylark-utils/widget',[\r\n    \"./skylark\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./geom\",\r\n    \"./eventer\",\r\n    \"./query\"\r\n], function(skylark,langx,noder,styler,geom,eventer,query) {\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n    function widget() {\r\n        return widget;\r\n    }\r\n\r\n\tvar Widget = langx.Evented.inherit({\r\n        init :function(el,options) {\r\n            if (!langx.isHtmlNode(el)) {\r\n                options = el;\r\n                el = null;\r\n            }\r\n            if (el) {\r\n            \tthis.el = el;\r\n        \t}\r\n            if (options) {\r\n                langx.mixin(this,options);\r\n            }\r\n            if (!this.cid) {\r\n                this.cid = langx.uniqueId('w');\r\n            }\r\n            this._ensureElement();\r\n        },\r\n\r\n\t    // The default `tagName` of a View's element is `\"div\"`.\r\n\t    tagName: 'div',\r\n\r\n\t    // jQuery delegate for element lookup, scoped to DOM elements within the\r\n\t    // current view. This should be preferred to global lookups where possible.\r\n\t    $: function(selector) {\r\n\t      return this.$el.find(selector);\r\n\t    },\r\n\r\n\t    // **render** is the core function that your view should override, in order\r\n\t    // to populate its element (`this.el`), with the appropriate HTML. The\r\n\t    // convention is for **render** to always return `this`.\r\n\t    render: function() {\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view by taking the element out of the DOM, and removing any\r\n\t    // applicable Backbone.Events listeners.\r\n\t    remove: function() {\r\n\t      this._removeElement();\r\n\t      this.unlistenTo();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Remove this view's element from the document and all event listeners\r\n\t    // attached to it. Exposed for subclasses using an alternative DOM\r\n\t    // manipulation API.\r\n\t    _removeElement: function() {\r\n\t      this.$el.remove();\r\n\t    },\r\n\r\n\t    // Change the view's element (`this.el` property) and re-delegate the\r\n\t    // view's events on the new element.\r\n\t    setElement: function(element) {\r\n\t      this.undelegateEvents();\r\n\t      this._setElement(element);\r\n\t      this.delegateEvents();\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Creates the `this.el` and `this.$el` references for this view using the\r\n\t    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n\t    // context or an element. Subclasses can override this to utilize an\r\n\t    // alternative DOM manipulation API and are only required to set the\r\n\t    // `this.el` property.\r\n\t    _setElement: function(el) {\r\n\t      this.$el = widget.$(el);\r\n\t      this.el = this.$el[0];\r\n\t    },\r\n\r\n\t    // Set callbacks, where `this.events` is a hash of\r\n\t    //\r\n\t    // *{\"event selector\": \"callback\"}*\r\n\t    //\r\n\t    //     {\r\n\t    //       'mousedown .title':  'edit',\r\n\t    //       'click .button':     'save',\r\n\t    //       'click .open':       function(e) { ... }\r\n\t    //     }\r\n\t    //\r\n\t    // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n\t    // Uses event delegation for efficiency.\r\n\t    // Omitting the selector binds the event to `this.el`.\r\n\t    delegateEvents: function(events) {\r\n\t      events || (events = langx.result(this, 'events'));\r\n\t      if (!events) return this;\r\n\t      this.undelegateEvents();\r\n\t      for (var key in events) {\r\n\t        var method = events[key];\r\n\t        if (!langx.isFunction(method)) method = this[method];\r\n\t        if (!method) continue;\r\n\t        var match = key.match(delegateEventSplitter);\r\n\t        this.delegate(match[1], match[2], langx.proxy(method, this));\r\n\t      }\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Add a single event listener to the view's element (or a child element\r\n\t    // using `selector`). This only works for delegate-able events: not `focus`,\r\n\t    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n\t    delegate: function(eventName, selector, listener) {\r\n\t      this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n\t    // You usually don't need to use this, but may wish to if you have multiple\r\n\t    // Backbone views attached to the same DOM element.\r\n\t    undelegateEvents: function() {\r\n\t      if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n\t    // `selector` and `listener` are both optional.\r\n\t    undelegate: function(eventName, selector, listener) {\r\n\t      this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n\t      return this;\r\n\t    },\r\n\r\n\t    // Produces a DOM element to be assigned to your view. Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _createElement: function(tagName,attrs) {\r\n\t      return noder.createElement(tagName,attrs);\r\n\t    },\r\n\r\n\t    // Ensure that the View has a DOM element to render into.\r\n\t    // If `this.el` is a string, pass it through `$()`, take the first\r\n\t    // matching element, and re-assign it to `el`. Otherwise, create\r\n\t    // an element from the `id`, `className` and `tagName` properties.\r\n\t    _ensureElement: function() {\r\n\t      if (!this.el) {\r\n\t        var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n\t        if (this.id) attrs.id = langx.result(this, 'id');\r\n\t        if (this.className) attrs['class'] = langx.result(this, 'className');\r\n\t        this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n\t        this._setAttributes(attrs);\r\n\t      } else {\r\n\t        this.setElement(langx.result(this, 'el'));\r\n\t      }\r\n\t    },\r\n\r\n\t    // Set attributes from a hash on this view's element.  Exposed for\r\n\t    // subclasses using an alternative DOM manipulation API.\r\n\t    _setAttributes: function(attributes) {\r\n\t      this.$el.attr(attributes);\r\n\t    },\r\n\r\n        // Translation function, gets the message key to be translated\r\n        // and an object with context specific data as arguments:\r\n        i18n: function (message, context) {\r\n            message = (this.messages && this.messages[message]) || message.toString();\r\n            if (context) {\r\n                langx.each(context, function (key, value) {\r\n                    message = message.replace('{' + key + '}', value);\r\n                });\r\n            }\r\n            return message;\r\n        },\r\n\r\n  \t});\r\n\r\n\r\n    langx.mixin(widget, {\r\n    \t$ : query,\r\n\r\n    \tWidget : Widget\r\n    });\r\n\r\n\r\n    return skylark.widget = widget;\r\n});\r\n\ndefine('skylarkjs/widget',[\r\n    \"skylark-utils/widget\"\r\n], function(widget) {\r\n    return widget;\r\n});\r\n\ndefine('skylarkjs/main',[\r\n    \"./core\",\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./datax\",\r\n    \"./dnd\",\r\n    \"./eventer\",\r\n    \"./filer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./langx\",\r\n    \"./models\",\r\n    \"./mover\",\r\n    \"./noder\",\r\n    \"./query\",\r\n    \"./resizer\",\r\n    \"./scripter\",\r\n    \"./selector\",\r\n    \"./styler\",\r\n    \"./velm\",\r\n    \"./widget\"\r\n], function(skylark) {\r\n    return skylark;\r\n})\r\n;\ndefine('skylarkjs', ['skylarkjs/main'], function (main) { return main; });\n\n"]}